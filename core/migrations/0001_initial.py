# Generated by Django 5.1.2 on 2024-10-26 22:09

import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobOffering',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('job_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=10)),
                ('type', models.CharField(choices=[('FULL TIME', 'Full Time'), ('PART TIME', 'Part Time'), ('CONTRACT', 'Contract')], default='FULL TIME', max_length=10)),
                ('published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField()),
                ('number_of_candidates', models.IntegerField(default=0)),
                ('contract_months', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Job Offering',
                'verbose_name_plural': 'Job Offerings',
                'ordering': ['job_id'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyHeading',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('ordinal', models.IntegerField(default=1, unique=True)),
            ],
            options={
                'verbose_name': 'Survey Heading',
                'verbose_name_plural': 'Survey Headings',
                'ordering': ['ordinal'],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('employee_number', models.CharField(editable=False, max_length=10, unique=True)),
                ('nationalIdNo', models.CharField(help_text='format:XX-XXXXXX-A-XX', max_length=150, unique=True, verbose_name='Nation ID Number')),
                ('profilePhoto', models.ImageField(blank=True, null=True, upload_to='users/profile-photos', verbose_name='Profile Photo')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=20, region=None, verbose_name='Phone Number')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10, verbose_name='Sex')),
                ('address_line_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('APPLICANT', 'Applicant'), ('HR OFFICER', 'HR Officer'), ('EMPLOYEE', 'Employee')], default='ADMIN', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=3)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['parent__name', 'name'],
                'unique_together': {('parent', 'code'), ('parent', 'name')},
            },
        ),
        migrations.CreateModel(
            name='JobAssignments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('salary', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=11)),
                ('status', models.CharField(choices=[('open', 'Active'), ('closed', 'Terminated'), ('inactive', 'Suspended')], default='open', max_length=10)),
                ('type', models.CharField(choices=[('FULL TIME', 'Full Time'), ('PART TIME', 'Part Time'), ('CONTRACT', 'Contract')], default='FULL TIME', max_length=10)),
                ('termination_reason', models.CharField(choices=[('NEW POSITION', 'New Position'), ('DISCIPLINARY', 'Disciplinary')], default='NEW POSITION', max_length=50)),
                ('termination_description', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('job_offering', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_employees', to='core.joboffering', verbose_name='Job Offering')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Job Assignment',
                'verbose_name_plural': 'Job Assignments',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='active_assignment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_employee', to='core.jobassignments'),
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('INTERVIEWED', 'Interviewed'), ('COMPLETED', 'Completed')], default='PENDING', max_length=11)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('job_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='core.joboffering', verbose_name='Job Offering')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
            },
        ),
        migrations.CreateModel(
            name='JobOfferingRequiredDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('optional', models.BooleanField(default=False)),
                ('job_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_documents', to='core.joboffering', verbose_name='Job Offering')),
            ],
            options={
                'verbose_name': 'Job Offering Required Document',
                'verbose_name_plural': 'Job Offering Required Documents',
            },
        ),
        migrations.AddField(
            model_name='joboffering',
            name='locations',
            field=models.ManyToManyField(to='core.location', verbose_name='Locations'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('level', models.CharField(choices=[('success', 'Success'), ('info', 'info'), ('warning', 'Warning'), ('error', 'Danger')], default='success', max_length=20, verbose_name='Level')),
                ('subject', models.CharField(default='Subject', max_length=255, verbose_name='Subject')),
                ('description', models.TextField(default='Description', verbose_name='Description')),
                ('unread', models.BooleanField(db_index=True, default=True, verbose_name='Unread')),
                ('public', models.BooleanField(db_index=True, default=True, verbose_name='public')),
                ('deleted', models.BooleanField(db_index=True, default=False, verbose_name='deleted')),
                ('emailed', models.BooleanField(db_index=True, default=False, verbose_name='emailed')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='data')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Recipient')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ('-unread', '-createdAt'),
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(editable=False, max_length=10, unique=True)),
                ('salaryMin', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=11, verbose_name='Salary Minimum')),
                ('salaryMax', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=11, verbose_name='Salary Maximum')),
                ('keywords', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.position', verbose_name='Reports To')),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'ordering': ['name'],
                'unique_together': {('code', 'name')},
            },
        ),
        migrations.AddField(
            model_name='joboffering',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.position', verbose_name='Position'),
        ),
        migrations.AddField(
            model_name='jobassignments',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.position', verbose_name='Position'),
        ),
        migrations.CreateModel(
            name='SurveyField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(editable=False, max_length=255, unique=True)),
                ('type', models.CharField(choices=[('D', 'Date'), ('B', 'Boolean'), ('E', 'Date Time'), ('T', 'Short Text'), ('L', 'Long Text'), ('N', 'Number'), ('S', 'Select Choice'), ('R', 'Radio Choice')], max_length=50)),
                ('cssClass', models.CharField(blank=True, default='col-12 col-sm-6', max_length=255, null=True, verbose_name='Css Classes')),
                ('label', models.CharField(max_length=255)),
                ('helpText', models.CharField(blank=True, max_length=255, null=True)),
                ('placeholder', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=False)),
                ('required', models.BooleanField(default=False)),
                ('allowCustom', models.BooleanField(default=False)),
                ('dp', models.PositiveIntegerField(default=0)),
                ('minimum', models.DecimalField(decimal_places=3, default=0, max_digits=11)),
                ('maximum', models.DecimalField(decimal_places=3, default=0, max_digits=11)),
                ('ordinal', models.IntegerField(default=1, unique=True)),
                ('heading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_fields', to='core.surveyheading')),
            ],
            options={
                'verbose_name': 'Survey Field',
                'verbose_name_plural': 'Survey Fields',
                'ordering': ['ordinal'],
            },
        ),
        migrations.CreateModel(
            name='SurveyRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey Record',
                'verbose_name_plural': 'Survey Records',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Task Description')),
                ('task_type', models.CharField(choices=[('file', 'File Upload'), ('meeting', 'Meeting'), ('interview', 'Interview'), ('training', 'Training Session')], max_length=10)),
                ('days', models.PositiveIntegerField(default=0, verbose_name='Days from Start Date')),
                ('hours', models.PositiveIntegerField(default=0, verbose_name='Hours from Start Date')),
                ('minutes', models.PositiveIntegerField(default=0, verbose_name='Hours from Start Date')),
                ('stage', models.CharField(choices=[('pre-onboarding', 'Pre-Onboarding'), ('onboarding', 'Onboarding')], default='pre-onboarding', max_length=14)),
                ('document_name', models.FileField(blank=True, max_length=255, null=True, upload_to='tasks/documents', verbose_name='Instruction Document')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.workflow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='joboffering',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_offerings', to='core.workflow', verbose_name='Workflow Template'),
        ),
        migrations.AddField(
            model_name='jobassignments',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_assignments', to='core.workflow', verbose_name='Onboarding Workflow'),
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together={('nationalIdNo',)},
        ),
        migrations.CreateModel(
            name='SurveyFieldChoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='core.surveyfield')),
            ],
            options={
                'verbose_name': 'Survey Field Choice',
                'verbose_name_plural': 'Survey Field Choices',
                'ordering': ['field', 'name'],
                'unique_together': {('field', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SurveyRecordValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('textValue', models.TextField(blank=True, null=True)),
                ('numberValue', models.DecimalField(blank=True, decimal_places=3, max_digits=11, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='core.surveyfield')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='core.surveyrecord')),
            ],
            options={
                'unique_together': {('record', 'field')},
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateTimeField()),
                ('file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='File Name')),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/', verbose_name='File')),
                ('day_before_notification', models.BooleanField(default=False)),
                ('hours_before_notification', models.BooleanField(default=False)),
                ('hours_after_notification', models.BooleanField(default=False)),
                ('day_after_notification', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Pending', 'Not Done'), ('Submitted', 'Pending'), ('Done', 'Done')], default='Pending', max_length=14)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.task')),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'ordering': ['-status', 'due_date'],
                'unique_together': {('task', 'assigned_to')},
            },
        ),
    ]
